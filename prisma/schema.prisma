// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       String     @id @default(cuid())
  nick     String     @unique @default(uuid())
  role     RoleEnum   @default(USER)
  email    String     @unique
  password String
  settings Settings[]
  sessions Session[]

  @@map("users")
}

model Settings {
  id           String  @id @default(cuid())
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  isTimeShowed Boolean @default(true)

  @@map("settings")
}

model Session {
  id           String  @id @default(cuid())
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  name         String
  scrambleType String
  solves       Solve[]

  @@map("session")
}

model Solve {
  id        String       @id @default(cuid())
  session   Session      @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  time      DateTime
  penalty   PenaltyEnum?
  scramble  String
  createdAt DateTime     @default(now())

  @@map("solves")
}

enum PenaltyEnum {
  plus2
  dnf
}

enum RoleEnum {
  USER
  ADMIN
}
